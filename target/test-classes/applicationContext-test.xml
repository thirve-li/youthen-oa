<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:sec="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
	    http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.2.xsd"
	default-lazy-init="true">

	<import resource="classpath:applicationContext-framework.xml" />
	<import resource="classpath:applicationContext-master.xml" />

	<!-- component-scan -->
	<context:component-scan base-package="com.youthen" />


	<bean id="dsConf"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc-test.properties</value>
				<value>classpath:smtp-test.properties</value>
			</list>
		</property>
	</bean>
	<!--  Property Settings  -->
	<bean id="propertyBean"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:setting.properties</value>
			</list>
		</property>
	</bean>

	<bean id="ds000" parent="ds">
		<property name="url" value="${jdbc.url.000}" />
		<property name="username" value="${jdbc.username.000}" />
		<property name="password" value="${jdbc.password.000}" />
	</bean>
	 

    <bean id="userService" class="com.youthen.master.common.security.MasterUserDetailsManager">
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="dataSource" ref="dataSource" />
        <property name="usersByUsernameQuery"
            value="SELECT
                        USER_ID,
                        PASSWORD,
                        COMPANY_CODE,
                        NAME,EMAIL,
                        IS_LOCK,
                        STATUS
                   FROM
                        T_USER  
                   WHERE
                        USER_ID = ?
                   " /> 
                   
         <property name="authoritiesByUsernameQuery"
            value="SELECT
                       B.USER_ID AS USER_ID,
                       B.ROLE_ID AS ROLE_ID,
                       A.ROLE_CODE AS ROLE_CODE
                       FROM
                       T_ROLE A ,T_USER_ROLE B 
                   WHERE
                       A.ROLE_ID = B.ROLE_ID
                       AND B.USER_ID = ?
                  
                   " /> 
    </bean>  

	<bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userService" />
		<property name="passwordEncoder" ref="passwordEncoder" />
		<property name="preAuthenticationChecks" ref="preAuthenticationChecks" />
		<property name="hideUserNotFoundExceptions" value="false" />
	</bean>

	<sec:authentication-manager alias="authenticationManager">
		<sec:authentication-provider ref="daoAuthenticationProvider" />
	</sec:authentication-manager>

	<bean id="preAuthenticationChecks" class="com.youthen.master.presentation.filter.MasterPreAuthenticationChecks" />
	
	<bean id="baseTestContextHelper" class="com.youthen.framework.test.impl.BaseTestContextHelperImpl"/>
	
	 
</beans>
